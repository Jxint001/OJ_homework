指针指向某变量的第一个字节的地址，指针的类型代表了要访问接下来几个字节（要访问对象的字节数量）指针本质上就是一串数字而已，占用四个字节
比如int类型就是4个（连续的四个字节里是我们想要的对象），double是8个

//////
int a, b, * p1 = &a, * p2;
 
&*p1 的含义：
&和*都是自右向左运算符，因此先看p1是指针，*p1即为p1指向的对象，
因此*p1等价于a,因此a 的前面加一个&,表示的就是 a 的地址
因此：&*p1 ,p1 ,&a 三者等价
*&a 的含义：a的地址前加*表示的就是a本身，指针就是用来放地址的，地址前面加*表示的就是这个对象
因此： *&a ,a ,*p 三者等价

/////////
左值引用：int&
非常量引用也可以通过引用改变值
就算是常量引用也是会追踪值的改变的，因为引用只是一个别名？
引用本身不占用额外的内存空间？引用的实现细节通常由编译器处理，编译器会将引用优化为直接访问它所引用的变量。
引用还是存储了地址的，但是不会复制数据